<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mingrui.flux.dao.AbnormalDataMapper">
  <resultMap id="BaseResultMap" type="com.mingrui.flux.pojo.AbnormalData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="mn" jdbcType="VARCHAR" property="mn" />
    <result column="error_desc" jdbcType="VARCHAR" property="errorDesc" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="owner_name" jdbcType="VARCHAR" property="ownerName" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="locale_id" jdbcType="VARCHAR" property="localeId" />
    <result column="record_at" jdbcType="BIGINT" property="recordAt" />
    <result column="handle_at" jdbcType="BIGINT" property="handleAt" />
    <result column="abnormal_date" jdbcType="DATE" property="abnormalDate" />
    <result column="process_date" jdbcType="DATE" property="processDate" />
    <result column="process_user_id" jdbcType="VARCHAR" property="processUserId" />
    <result column="process_reason" jdbcType="CHAR" property="processReason" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    id, type, device_id, mn, error_desc, owner, status, owner_name, user_id, address, 
    locale_id, record_at, handle_at, abnormal_date, process_date, process_user_id, process_reason, 
    created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.mingrui.flux.pojo.AbnormalDataExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from abnormal_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    select 
    <include refid="Base_Column_List" />
    from abnormal_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    delete from abnormal_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mingrui.flux.pojo.AbnormalDataExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    delete from abnormal_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mingrui.flux.pojo.AbnormalData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    insert into abnormal_data (id, type, device_id, 
      mn, error_desc, owner, 
      status, owner_name, user_id, 
      address, locale_id, record_at, 
      handle_at, abnormal_date, process_date, 
      process_user_id, process_reason, created_at, 
      updated_at)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{deviceId,jdbcType=VARCHAR}, 
      #{mn,jdbcType=VARCHAR}, #{errorDesc,jdbcType=VARCHAR}, #{owner,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{ownerName,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{localeId,jdbcType=VARCHAR}, #{recordAt,jdbcType=BIGINT}, 
      #{handleAt,jdbcType=BIGINT}, #{abnormalDate,jdbcType=DATE}, #{processDate,jdbcType=DATE}, 
      #{processUserId,jdbcType=VARCHAR}, #{processReason,jdbcType=CHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mingrui.flux.pojo.AbnormalData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    insert into abnormal_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="mn != null">
        mn,
      </if>
      <if test="errorDesc != null">
        error_desc,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="ownerName != null">
        owner_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="localeId != null">
        locale_id,
      </if>
      <if test="recordAt != null">
        record_at,
      </if>
      <if test="handleAt != null">
        handle_at,
      </if>
      <if test="abnormalDate != null">
        abnormal_date,
      </if>
      <if test="processDate != null">
        process_date,
      </if>
      <if test="processUserId != null">
        process_user_id,
      </if>
      <if test="processReason != null">
        process_reason,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="mn != null">
        #{mn,jdbcType=VARCHAR},
      </if>
      <if test="errorDesc != null">
        #{errorDesc,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="ownerName != null">
        #{ownerName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="localeId != null">
        #{localeId,jdbcType=VARCHAR},
      </if>
      <if test="recordAt != null">
        #{recordAt,jdbcType=BIGINT},
      </if>
      <if test="handleAt != null">
        #{handleAt,jdbcType=BIGINT},
      </if>
      <if test="abnormalDate != null">
        #{abnormalDate,jdbcType=DATE},
      </if>
      <if test="processDate != null">
        #{processDate,jdbcType=DATE},
      </if>
      <if test="processUserId != null">
        #{processUserId,jdbcType=VARCHAR},
      </if>
      <if test="processReason != null">
        #{processReason,jdbcType=CHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mingrui.flux.pojo.AbnormalDataExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    select count(*) from abnormal_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    update abnormal_data
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.mn != null">
        mn = #{record.mn,jdbcType=VARCHAR},
      </if>
      <if test="record.errorDesc != null">
        error_desc = #{record.errorDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.owner != null">
        owner = #{record.owner,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.ownerName != null">
        owner_name = #{record.ownerName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.localeId != null">
        locale_id = #{record.localeId,jdbcType=VARCHAR},
      </if>
      <if test="record.recordAt != null">
        record_at = #{record.recordAt,jdbcType=BIGINT},
      </if>
      <if test="record.handleAt != null">
        handle_at = #{record.handleAt,jdbcType=BIGINT},
      </if>
      <if test="record.abnormalDate != null">
        abnormal_date = #{record.abnormalDate,jdbcType=DATE},
      </if>
      <if test="record.processDate != null">
        process_date = #{record.processDate,jdbcType=DATE},
      </if>
      <if test="record.processUserId != null">
        process_user_id = #{record.processUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.processReason != null">
        process_reason = #{record.processReason,jdbcType=CHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    update abnormal_data
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      device_id = #{record.deviceId,jdbcType=VARCHAR},
      mn = #{record.mn,jdbcType=VARCHAR},
      error_desc = #{record.errorDesc,jdbcType=VARCHAR},
      owner = #{record.owner,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      owner_name = #{record.ownerName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      locale_id = #{record.localeId,jdbcType=VARCHAR},
      record_at = #{record.recordAt,jdbcType=BIGINT},
      handle_at = #{record.handleAt,jdbcType=BIGINT},
      abnormal_date = #{record.abnormalDate,jdbcType=DATE},
      process_date = #{record.processDate,jdbcType=DATE},
      process_user_id = #{record.processUserId,jdbcType=VARCHAR},
      process_reason = #{record.processReason,jdbcType=CHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mingrui.flux.pojo.AbnormalData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    update abnormal_data
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="mn != null">
        mn = #{mn,jdbcType=VARCHAR},
      </if>
      <if test="errorDesc != null">
        error_desc = #{errorDesc,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        owner = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="ownerName != null">
        owner_name = #{ownerName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="localeId != null">
        locale_id = #{localeId,jdbcType=VARCHAR},
      </if>
      <if test="recordAt != null">
        record_at = #{recordAt,jdbcType=BIGINT},
      </if>
      <if test="handleAt != null">
        handle_at = #{handleAt,jdbcType=BIGINT},
      </if>
      <if test="abnormalDate != null">
        abnormal_date = #{abnormalDate,jdbcType=DATE},
      </if>
      <if test="processDate != null">
        process_date = #{processDate,jdbcType=DATE},
      </if>
      <if test="processUserId != null">
        process_user_id = #{processUserId,jdbcType=VARCHAR},
      </if>
      <if test="processReason != null">
        process_reason = #{processReason,jdbcType=CHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mingrui.flux.pojo.AbnormalData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:44:38 CST 2022.
    -->
    update abnormal_data
    set type = #{type,jdbcType=TINYINT},
      device_id = #{deviceId,jdbcType=VARCHAR},
      mn = #{mn,jdbcType=VARCHAR},
      error_desc = #{errorDesc,jdbcType=VARCHAR},
      owner = #{owner,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      owner_name = #{ownerName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      locale_id = #{localeId,jdbcType=VARCHAR},
      record_at = #{recordAt,jdbcType=BIGINT},
      handle_at = #{handleAt,jdbcType=BIGINT},
      abnormal_date = #{abnormalDate,jdbcType=DATE},
      process_date = #{processDate,jdbcType=DATE},
      process_user_id = #{processUserId,jdbcType=VARCHAR},
      process_reason = #{processReason,jdbcType=CHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>